// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  password  String
  role      String    @default("user") // "admin" или "user"
  companyId String?
  company   Company?  @relation(fields: [companyId], references: [id])

  createdAt      DateTime @default(now())
}

model Company {
  id                   String    @id @default(uuid())
  companyName          String
  shortName            String
  license              String
  inn                  String    @unique @db.Char(10) // 10 символов
  kpp                  String    @db.Char(9) // 9 символов
  ogrn                 String?   @db.Char(13) // 13 символов, опционально
  legalAddress         String
  actualAddress        String?
  region               String
  bank                 String
  account              String    @db.Char(20) // 20 символов
  bik                  String    @db.Char(9) // 9 символов
  correspondentAccount String    @db.Char(20) // 20 символов
  directorSurname      String
  directorName         String
  directorPatronymic   String?
  accountantSurname    String?
  accountantName       String?
  accountantPatronymic String?
  phone                String
  email                String    @unique
  website              String?
  users                User[]
  teachers             Teacher[]
  cars            Car[]
}

model Teacher {
  id               String  @id @default(uuid())
  lastName         String
  firstName        String
  middleName       String?
  activityType     String  @default("theory") // "theory" или "practice"
  birthDate        String?
  birthPlace       String?
  address          String?
  licenseSeries    String?
  licenseNumber    String?
  licenseIssueDate String?
  snils            String?
  companyId        String
  createdBy        String
  company          Company @relation(fields: [companyId], references: [id], onDelete: Cascade)
  cars            Car[]
}

model Car {
  id             String  @id @default(uuid())
  carModel       String
  carNumber      String
  literalMarking String
  teacherId      String
  companyId      String 
  teacher        Teacher? @relation(fields: [teacherId], references: [id], onDelete: SetNull)
  company        Company @relation(fields: [companyId], references: [id], onDelete: Cascade)

  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}
